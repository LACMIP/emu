[
  {
    "op": "core/column-rename",
    "description": "Rename column SpecLocNo to SitSiteRef_tab.SitSiteNumber",
    "oldColumnName": "SpecLocNo",
    "newColumnName": "SitSiteRef_tab.SitSiteNumber"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column SpecAmt to InvNoOfSp",
    "oldColumnName": "SpecAmt",
    "newColumnName": "InvNoOfSp"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column SpecNo to IPLotNo",
    "oldColumnName": "SpecNo",
    "newColumnName": "IPLotNo"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column CollType to IPCollection",
    "oldColumnName": "CollType",
    "newColumnName": "IPCollection"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Nature to IPOriginalNature_tab",
    "oldColumnName": "Nature",
    "newColumnName": "IPOriginalNature_tab"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Anatomy to IPAnatomy_tab",
    "oldColumnName": "Anatomy",
    "newColumnName": "IPAnatomy_tab"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column recordDate to AdmDateInserted",
    "oldColumnName": "recordDate",
    "newColumnName": "AdmDateInserted"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Identified by to Ide2IdentifiedBy1_tab(1)",
    "oldColumnName": "Identified by",
    "newColumnName": "Ide2IdentifiedBy1_tab(1)"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Identified date to Ide2DateIdentified0(1)",
    "oldColumnName": "Identified date",
    "newColumnName": "Ide2DateIdentified0(1)"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column TypeNo to IPTypeNo",
    "oldColumnName": "TypeNo",
    "newColumnName": "IPTypeNo"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column TypeStatus to InvTypeStatus",
    "oldColumnName": "TypeStatus",
    "newColumnName": "InvTypeStatus"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column SpecIRN to AuxRem1",
    "oldColumnName": "SpecIRN",
    "newColumnName": "AuxRem1"
  },
  {
    "op": "core/column-split",
    "description": "Split column PrevCatNo by separator",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PrevCatNo",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " ",
    "regex": false,
    "maxColumns": 2
  },
  {
    "op": "core/column-rename",
    "description": "Rename column PrevCatNo 2 to IPCatInstNumber_tab",
    "oldColumnName": "PrevCatNo 2",
    "newColumnName": "IPCatInstNumber_tab"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column PrevCatNo 1 to IPCatInstCode_tab",
    "oldColumnName": "PrevCatNo 1",
    "newColumnName": "IPCatInstCode_tab"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column AuxRem1 using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AuxRem1",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column OriginalID using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OriginalID",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column locMod using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "locMod",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPLotNo using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPLotNo",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SitSiteRef_tab.SitSiteNumber using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SitSiteRef_tab.SitSiteNumber",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCatInstCode_tab using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCatInstCode_tab",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvNoOfSp using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvNoOfSp",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCatInstNumber_tab using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCatInstNumber_tab",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCollection using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCollection",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Flag using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Flag",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column KenNo using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "KenNo",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SpecTaxNo using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SpecTaxNo",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2IdentifiedBy1_tab(1) using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Ide2IdentifiedBy1_tab(1)",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Comments using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Comments",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column AdmDateInserted using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdmDateInserted",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPAnatomy_tab using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPAnatomy_tab",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPOriginalNature_tab using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPOriginalNature_tab",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column MigrationStatus using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MigrationStatus",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvTypeStatus using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvTypeStatus",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPTypeNo using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPTypeNo",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2DateIdentified0(1) using expression grel:value.toString()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Ide2DateIdentified0(1)",
    "expression": "grel:value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column AuxRem1 using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AuxRem1",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column OriginalID using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OriginalID",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvNoOfSp using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvNoOfSp",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column locMod using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "locMod",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SitSiteRef_tab.SitSiteNumber using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SitSiteRef_tab.SitSiteNumber",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPLotNo using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPLotNo",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCatInstCode_tab using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCatInstCode_tab",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCollection using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCollection",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Flag using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Flag",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column KenNo using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "KenNo",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SpecTaxNo using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SpecTaxNo",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Comments using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Comments",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column AdmDateInserted using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdmDateInserted",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPAnatomy_tab using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPAnatomy_tab",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPOriginalNature_tab using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPOriginalNature_tab",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCatInstNumber_tab using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCatInstNumber_tab",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column MigrationStatus using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MigrationStatus",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvTypeStatus using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvTypeStatus",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPTypeNo using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPTypeNo",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2DateIdentified0(1) using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Ide2DateIdentified0(1)",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2IdentifiedBy1_tab(1) using expression grel:value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Ide2IdentifiedBy1_tab(1)",
    "expression": "grel:value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column AuxRem1 using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AuxRem1",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column OriginalID using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OriginalID",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column locMod using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "locMod",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvNoOfSp using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvNoOfSp",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPLotNo using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPLotNo",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SitSiteRef_tab.SitSiteNumber using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SitSiteRef_tab.SitSiteNumber",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCatInstCode_tab using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCatInstCode_tab",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCatInstNumber_tab using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCatInstNumber_tab",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCollection using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPCollection",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Flag using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Flag",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column KenNo using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "KenNo",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SpecTaxNo using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SpecTaxNo",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2IdentifiedBy1_tab(1) using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Ide2IdentifiedBy1_tab(1)",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Comments using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Comments",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column AdmDateInserted using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdmDateInserted",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPAnatomy_tab using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPAnatomy_tab",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column MigrationStatus using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MigrationStatus",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPOriginalNature_tab using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPOriginalNature_tab",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvTypeStatus using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvTypeStatus",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPTypeNo using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "IPTypeNo",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2DateIdentified0(1) using expression grel:value.replace(/\\\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Ide2DateIdentified0(1)",
    "expression": "grel:value.replace(/\\\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column IPProject at index 2 based on column SitSiteRef_tab.SitSiteNumber using expression grel:\"EPICC\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "IPProject",
    "columnInsertIndex": 2,
    "baseColumnName": "SitSiteRef_tab.SitSiteNumber",
    "expression": "grel:\"EPICC\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SitSiteRef_tab.SitSiteNumber using expression grel:\"LACMIP \"+value",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SitSiteRef_tab.SitSiteNumber",
    "expression": "grel:\"LACMIP \"+value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column AdmPublishWebNoPassword at index 1 based on column AuxRem1 using expression grel:\"Yes\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "AdmPublishWebNoPassword",
    "columnInsertIndex": 1,
    "baseColumnName": "AuxRem1",
    "expression": "grel:\"Yes\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Ide2CurrentID_tab(1) at index 9 based on column SpecTaxNo using expression grel:\"Yes\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "Ide2CurrentID_tab(1)",
    "columnInsertIndex": 9,
    "baseColumnName": "SpecTaxNo",
    "expression": "grel:\"Yes\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Ide2FiledAs_tab(1) at index 9 based on column SpecTaxNo using expression grel:\"Yes\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "Ide2FiledAs_tab(1)",
    "columnInsertIndex": 9,
    "baseColumnName": "SpecTaxNo",
    "expression": "grel:\"Yes\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column IPDisposition at index 3 based on column SitSiteRef_tab.SitSiteNumber using expression grel:\"in collection\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "IPDisposition",
    "columnInsertIndex": 3,
    "baseColumnName": "SitSiteRef_tab.SitSiteNumber",
    "expression": "grel:\"in collection\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPDisposition using expression grel:\"unknown\"",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Flag",
          "expression": "value",
          "columnName": "Flag",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "provisional",
                "l": "provisional"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "IPDisposition",
    "expression": "grel:\"unknown\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPCollection using expression grel:\"TYPE\"",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IPTypeNo",
          "expression": "isBlank(value).toString()",
          "columnName": "IPTypeNo",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "false",
                "l": "false"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "IPCollection",
    "expression": "grel:\"TYPE\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column InvTypeStatus using expression value.toLowercase()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "InvTypeStatus",
    "expression": "value.toLowercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPOriginalNature_tab using expression grel:\"body fossil\"",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IPOriginalNature_tab",
          "expression": "isBlank(value).toString()",
          "columnName": "IPOriginalNature_tab",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "true",
                "l": "true"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "IPOriginalNature_tab",
    "expression": "grel:\"body fossil\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IPAnatomy_tab using expression grel:\"body\"",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "IPAnatomy_tab",
          "expression": "isBlank(value).toString()",
          "columnName": "IPAnatomy_tab",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "true",
                "l": "true"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "IPAnatomy_tab",
    "expression": "grel:\"body\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Ide2IdentifiedBy1_tab(1) using expression grel:\"unknown\"",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Ide2IdentifiedBy1_tab(1)",
          "expression": "isBlank(value).toString()",
          "columnName": "Ide2IdentifiedBy1_tab(1)",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "true",
                "l": "true"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Ide2IdentifiedBy1_tab(1)",
    "expression": "grel:\"unknown\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column AdmInsertedBy at index 20 based on column AdmDateInserted using expression grel:\"IP Staff\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "AdmInsertedBy",
    "columnInsertIndex": 20,
    "baseColumnName": "AdmDateInserted",
    "expression": "grel:\"IP Staff\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column MigrationStatus",
    "columnName": "MigrationStatus"
  }
  {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "AuxRem1",
      "SitSiteRef_tab.SitSiteNumber",
      "locMod",
      "IPLotNo",
      "InvNoOfSp",
      "IPDisposition",
      "Flag",
      "IPProject",
      "IPCollection",
      "IPTypeNo",
      "InvTypeStatus",
      "IPCatInstCode_tab",
      "IPCatInstNumber_tab",
      "IPOriginalNature_tab",
      "IPAnatomy_tab",
      "Comments",
      "KenNo",
      "SpecTaxNo",
      "Ide2IdentifiedBy1_tab(1)",
      "Ide2DateIdentified0(1)",
      "Ide2CurrentID_tab(1)",
      "Ide2FiledAs_tab(1)",
      "OriginalID",
      "AdmInsertedBy",
      "AdmDateInserted",
      "AdmPublishWebNoPassword"
    ]
  }
]
